---
# Common configuration for all the nodes in the cluster.

- name: Configure and Install Kubernetes from upstream (packages.cloud.google.com)
  block:
  - name: Kubernetes | Download and install gpg key
    ansible.builtin.get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /etc/apt/keyrings/kubernetes-archive-keyring.asc
      mode: '0644'
    tags:
      - bootstrap
      - kubernetes

  - name: Kubernetes | Add apt repository
    ansible.builtin.apt_repository:
      repo: |
        deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.asc]
        https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes
    tags:
      - bootstrap
      - kubernetes

  - name: Kubernetes | Get latest version
    ansible.builtin.shell:
      cmd: |
          apt show kubelet | awk '/Version/ { print $2 }'
    register: kubernetes_latest_version
    changed_when: false
    run_once: true
    tags:
      - bootstrap
      - kubernetes
      - debug

  - name: Kubernetes | Latest Version
    ansible.builtin.debug:
      msg: "{{ kubernetes_latest_version.stdout }}"
    run_once: true
    tags:
      - bootstrap
      - kubernetes
      - debug

  # Set the second parameter on the 'default' filter as true, to use the specified value when variable evaluate to false
  # or is an empty string.
  - name: Kubernetes | Selected Version via configuration
    ansible.builtin.debug:
      msg: "{{ kubernetes_version | default('', true)}}"
    run_once: true
    tags:
      - bootstrap
      - kubernetes
      - debug

  # - Specifying the latest version instead of leaving it empty to make it more explicit.
  # - In a real world scenery the downgrade/upgrade should be done in a different way, but this is a lab so the option
  #   'allow_change_held_packages' is used to simplify the process.
  - name: Kubernetes | Install packages
    ansible.builtin.apt:
      # The '*' is concatenated to match a Kubernetes release or, a partial or full package version.
      name: "{{ item }}"
      state: present
      allow_downgrade: yes
      allow_change_held_packages: yes
    loop:
      - "{{ 'kubelet' ~ '=' ~ kubernetes_version | ternary(kubernetes_version ~ '*', kubernetes_latest_version.stdout) }}"
      - "{{ 'kubeadm' ~ '=' ~ kubernetes_version | ternary(kubernetes_version ~ '*', kubernetes_latest_version.stdout) }}"
      - "{{ 'kubectl' ~ '=' ~ kubernetes_version | ternary(kubernetes_version ~ '*', kubernetes_latest_version.stdout) }}"

    tags:
      - bootstrap
      - kubernetes

  - name: Kubernetes | Prevent packages from being upgraded
    ansible.builtin.dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
      - kubelet
      - kubeadm
      - kubectl
    tags:
      - bootstrap
      - kubernetes
